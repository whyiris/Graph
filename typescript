Script started on Tue 14 Feb 2017 04:32:08 PM PST
hoiyanwu@uw1-320-13:~$ valgrind ./a.outg++ -std=c++11 lab3.cpp graphm.cpp graphl.cpp nodedata.cpp
hoiyanwu@uw1-320-13:~$ g++ -std=c++11 lab3.cpp graphm.cpp graphl.cpp nodedata.cpp[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cvalgrind ./a.out[K
==31697== Memcheck, a memory error detector
==31697== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==31697== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==31697== Command: ./a.out
==31697== 
Description         From node   To node   Dijkstra's     Path      
Aurora and 85th
                        1         2        40            1 3 2
                        1         3        20            1 3
                        1         4        50            1 3 2 4
                        1         5        30            1 5
Green Lake Starbucks
                        2         1      ----
                        2         3      ----
                        2         4        10            2 4
                        2         5      ----
Woodland Park Zoo
                        3         1      ----
                        3         2        20            3 2
                        3         4        30            3 2 4
                        3         5      ----
Troll under bridge
                        4         1      ----
                        4         2      ----
                        4         3      ----
                        4         5      ----
PCC
                        5         1      ----
                        5         2        20            5 2
                        5         3      ----
                        5         4        25            5 4

    3         1      ----

    1         2        40            1 3 2
Aurora and 85th
Woodland Park Zoo
Green Lake Starbucks

    1         4        50            1 3 2 4
Aurora and 85th
Woodland Park Zoo
Green Lake Starbucks
Troll under bridge

Description         From node   To node   Dijkstra's     Path      
aaa
                        1         2         9            1 3 2
                        1         3         5            1 3
bbb
                        2         1      ----
                        2         3        20            2 3
ccc
                        3         1      ----
                        3         2         4            3 2

    3         1      ----

    1         2         9            1 3 2
aaa
ccc
bbb

    1         4      ----

Graph:
Node1        Aurora and 85th
  edge 1  2
  edge 1  3
  edge 1  5
Node2        Green Lake Starbucks
  edge 2  4
Node3        Woodland Park Zoo
  edge 3  2
  edge 3  4
Node4        Troll under bridge
Node5        PCC
  edge 5  2
  edge 5  4

Depth-first ordering:  1  2  4  3  5

Graph:
Node1        aaa
  edge 1  3
  edge 1  2
Node2        bbb
  edge 2  3
Node3        ccc
  edge 3  2

Depth-first ordering:  1  3  2


==31697== 
==31697== HEAP SUMMARY:
==31697==     in use at exit: 72,704 bytes in 1 blocks
==31697==   total heap usage: 36 allocs, 35 frees, 92,102 bytes allocated
==31697== 
==31697== LEAK SUMMARY:
==31697==    definitely lost: 0 bytes in 0 blocks
==31697==    indirectly lost: 0 bytes in 0 blocks
==31697==      possibly lost: 0 bytes in 0 blocks
==31697==    still reachable: 72,704 bytes in 1 blocks
==31697==         suppressed: 0 bytes in 0 blocks
==31697== Rerun with --leak-check=full to see details of leaked memory
==31697== 
==31697== For counts of detected and suppressed errors, rerun with: -v
==31697== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
hoiyanwu@uw1-320-13:~$ exit

Script done on Tue 14 Feb 2017 04:32:14 PM PST
